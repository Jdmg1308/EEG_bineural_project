// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from packets.djinni

#pragma once

#include <functional>

namespace interaxon { namespace bridge {

/**
 * \if IOS_ONLY
 * \file
 * \endif
 * Represents the data mapping in an EEG packet.
 * Enum values correspond to head locations.
 *
 * Raw EEG values are given in microvolts. EEG derived values may have different units
 * as defined in \classlink{MuseDataPacketType}.
 *
 * \sa \enumlink{MuseDataPacketType,EEG,IXNMuseDataPacketTypeEeg}
 * \sa \functionlink{MuseDataPacket,getEegChannelValue,get_eeg_channel_value}
 */
enum class Eeg : int {
    /** Left ear */
    EEG1,
    /** Left forehead */
    EEG2,
    /** Right forehead */
    EEG3,
    /** Right ear */
    EEG4,
    /** Left auxiliary (maps to AUX1 on \muse2025). */
    AUX_LEFT,
    /** Right auxiliary (maps to AUX2 on \muse2025). */
    AUX_RIGHT,
    /** Auxiliary input 1 on \muse2025. */
    AUX1,
    /** Auxiliary input 2 on \muse2025. */
    AUX2,
    /** Auxiliary input 3 on \muse2025 */
    AUX3,
    /** Auxiliary input 4 on \muse2025 */
    AUX4,
};

} }  // namespace interaxon::bridge

namespace std {

template <>
struct hash<::interaxon::bridge::Eeg> {
    size_t operator()(::interaxon::bridge::Eeg type) const {
        return std::hash<int>()(static_cast<int>(type));
    }
};

}  // namespace std
