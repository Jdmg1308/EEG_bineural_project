// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_UI_Shell_1_H
#define WINRT_Windows_UI_Shell_1_H
#include "winrt/impl/Windows.UI.Shell.0.h"
WINRT_EXPORT namespace winrt::Windows::UI::Shell
{
    struct __declspec(empty_bases) IAdaptiveCard :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdaptiveCard>
    {
        IAdaptiveCard(std::nullptr_t = nullptr) noexcept {}
        IAdaptiveCard(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAdaptiveCard(IAdaptiveCard const&) noexcept = default;
        IAdaptiveCard(IAdaptiveCard&&) noexcept = default;
        IAdaptiveCard& operator=(IAdaptiveCard const&) & noexcept = default;
        IAdaptiveCard& operator=(IAdaptiveCard&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAdaptiveCardBuilderStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IAdaptiveCardBuilderStatics>
    {
        IAdaptiveCardBuilderStatics(std::nullptr_t = nullptr) noexcept {}
        IAdaptiveCardBuilderStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAdaptiveCardBuilderStatics(IAdaptiveCardBuilderStatics const&) noexcept = default;
        IAdaptiveCardBuilderStatics(IAdaptiveCardBuilderStatics&&) noexcept = default;
        IAdaptiveCardBuilderStatics& operator=(IAdaptiveCardBuilderStatics const&) & noexcept = default;
        IAdaptiveCardBuilderStatics& operator=(IAdaptiveCardBuilderStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusSession :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusSession>
    {
        IFocusSession(std::nullptr_t = nullptr) noexcept {}
        IFocusSession(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusSession(IFocusSession const&) noexcept = default;
        IFocusSession(IFocusSession&&) noexcept = default;
        IFocusSession& operator=(IFocusSession const&) & noexcept = default;
        IFocusSession& operator=(IFocusSession&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusSessionManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusSessionManager>
    {
        IFocusSessionManager(std::nullptr_t = nullptr) noexcept {}
        IFocusSessionManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusSessionManager(IFocusSessionManager const&) noexcept = default;
        IFocusSessionManager(IFocusSessionManager&&) noexcept = default;
        IFocusSessionManager& operator=(IFocusSessionManager const&) & noexcept = default;
        IFocusSessionManager& operator=(IFocusSessionManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFocusSessionManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFocusSessionManagerStatics>
    {
        IFocusSessionManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IFocusSessionManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFocusSessionManagerStatics(IFocusSessionManagerStatics const&) noexcept = default;
        IFocusSessionManagerStatics(IFocusSessionManagerStatics&&) noexcept = default;
        IFocusSessionManagerStatics& operator=(IFocusSessionManagerStatics const&) & noexcept = default;
        IFocusSessionManagerStatics& operator=(IFocusSessionManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ISecurityAppManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ISecurityAppManager>
    {
        ISecurityAppManager(std::nullptr_t = nullptr) noexcept {}
        ISecurityAppManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ISecurityAppManager(ISecurityAppManager const&) noexcept = default;
        ISecurityAppManager(ISecurityAppManager&&) noexcept = default;
        ISecurityAppManager& operator=(ISecurityAppManager const&) & noexcept = default;
        ISecurityAppManager& operator=(ISecurityAppManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareWindowCommandEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareWindowCommandEventArgs>
    {
        IShareWindowCommandEventArgs(std::nullptr_t = nullptr) noexcept {}
        IShareWindowCommandEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareWindowCommandEventArgs(IShareWindowCommandEventArgs const&) noexcept = default;
        IShareWindowCommandEventArgs(IShareWindowCommandEventArgs&&) noexcept = default;
        IShareWindowCommandEventArgs& operator=(IShareWindowCommandEventArgs const&) & noexcept = default;
        IShareWindowCommandEventArgs& operator=(IShareWindowCommandEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareWindowCommandSource :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareWindowCommandSource>
    {
        IShareWindowCommandSource(std::nullptr_t = nullptr) noexcept {}
        IShareWindowCommandSource(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareWindowCommandSource(IShareWindowCommandSource const&) noexcept = default;
        IShareWindowCommandSource(IShareWindowCommandSource&&) noexcept = default;
        IShareWindowCommandSource& operator=(IShareWindowCommandSource const&) & noexcept = default;
        IShareWindowCommandSource& operator=(IShareWindowCommandSource&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IShareWindowCommandSourceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IShareWindowCommandSourceStatics>
    {
        IShareWindowCommandSourceStatics(std::nullptr_t = nullptr) noexcept {}
        IShareWindowCommandSourceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IShareWindowCommandSourceStatics(IShareWindowCommandSourceStatics const&) noexcept = default;
        IShareWindowCommandSourceStatics(IShareWindowCommandSourceStatics&&) noexcept = default;
        IShareWindowCommandSourceStatics& operator=(IShareWindowCommandSourceStatics const&) & noexcept = default;
        IShareWindowCommandSourceStatics& operator=(IShareWindowCommandSourceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITaskbarManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITaskbarManager>
    {
        ITaskbarManager(std::nullptr_t = nullptr) noexcept {}
        ITaskbarManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITaskbarManager(ITaskbarManager const&) noexcept = default;
        ITaskbarManager(ITaskbarManager&&) noexcept = default;
        ITaskbarManager& operator=(ITaskbarManager const&) & noexcept = default;
        ITaskbarManager& operator=(ITaskbarManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITaskbarManager2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITaskbarManager2>,
        impl::require<winrt::Windows::UI::Shell::ITaskbarManager2, winrt::Windows::UI::Shell::ITaskbarManager>
    {
        ITaskbarManager2(std::nullptr_t = nullptr) noexcept {}
        ITaskbarManager2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITaskbarManager2(ITaskbarManager2 const&) noexcept = default;
        ITaskbarManager2(ITaskbarManager2&&) noexcept = default;
        ITaskbarManager2& operator=(ITaskbarManager2 const&) & noexcept = default;
        ITaskbarManager2& operator=(ITaskbarManager2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITaskbarManagerDesktopAppSupportStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITaskbarManagerDesktopAppSupportStatics>
    {
        ITaskbarManagerDesktopAppSupportStatics(std::nullptr_t = nullptr) noexcept {}
        ITaskbarManagerDesktopAppSupportStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITaskbarManagerDesktopAppSupportStatics(ITaskbarManagerDesktopAppSupportStatics const&) noexcept = default;
        ITaskbarManagerDesktopAppSupportStatics(ITaskbarManagerDesktopAppSupportStatics&&) noexcept = default;
        ITaskbarManagerDesktopAppSupportStatics& operator=(ITaskbarManagerDesktopAppSupportStatics const&) & noexcept = default;
        ITaskbarManagerDesktopAppSupportStatics& operator=(ITaskbarManagerDesktopAppSupportStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITaskbarManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITaskbarManagerStatics>
    {
        ITaskbarManagerStatics(std::nullptr_t = nullptr) noexcept {}
        ITaskbarManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITaskbarManagerStatics(ITaskbarManagerStatics const&) noexcept = default;
        ITaskbarManagerStatics(ITaskbarManagerStatics&&) noexcept = default;
        ITaskbarManagerStatics& operator=(ITaskbarManagerStatics const&) & noexcept = default;
        ITaskbarManagerStatics& operator=(ITaskbarManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTab :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTab>
    {
        IWindowTab(std::nullptr_t = nullptr) noexcept {}
        IWindowTab(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTab(IWindowTab const&) noexcept = default;
        IWindowTab(IWindowTab&&) noexcept = default;
        IWindowTab& operator=(IWindowTab const&) & noexcept = default;
        IWindowTab& operator=(IWindowTab&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabCloseRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabCloseRequestedEventArgs>
    {
        IWindowTabCloseRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowTabCloseRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabCloseRequestedEventArgs(IWindowTabCloseRequestedEventArgs const&) noexcept = default;
        IWindowTabCloseRequestedEventArgs(IWindowTabCloseRequestedEventArgs&&) noexcept = default;
        IWindowTabCloseRequestedEventArgs& operator=(IWindowTabCloseRequestedEventArgs const&) & noexcept = default;
        IWindowTabCloseRequestedEventArgs& operator=(IWindowTabCloseRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabCollection :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabCollection>
    {
        IWindowTabCollection(std::nullptr_t = nullptr) noexcept {}
        IWindowTabCollection(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabCollection(IWindowTabCollection const&) noexcept = default;
        IWindowTabCollection(IWindowTabCollection&&) noexcept = default;
        IWindowTabCollection& operator=(IWindowTabCollection const&) & noexcept = default;
        IWindowTabCollection& operator=(IWindowTabCollection&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabGroup :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabGroup>
    {
        IWindowTabGroup(std::nullptr_t = nullptr) noexcept {}
        IWindowTabGroup(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabGroup(IWindowTabGroup const&) noexcept = default;
        IWindowTabGroup(IWindowTabGroup&&) noexcept = default;
        IWindowTabGroup& operator=(IWindowTabGroup const&) & noexcept = default;
        IWindowTabGroup& operator=(IWindowTabGroup&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabIcon :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabIcon>
    {
        IWindowTabIcon(std::nullptr_t = nullptr) noexcept {}
        IWindowTabIcon(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabIcon(IWindowTabIcon const&) noexcept = default;
        IWindowTabIcon(IWindowTabIcon&&) noexcept = default;
        IWindowTabIcon& operator=(IWindowTabIcon const&) & noexcept = default;
        IWindowTabIcon& operator=(IWindowTabIcon&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabIconStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabIconStatics>
    {
        IWindowTabIconStatics(std::nullptr_t = nullptr) noexcept {}
        IWindowTabIconStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabIconStatics(IWindowTabIconStatics const&) noexcept = default;
        IWindowTabIconStatics(IWindowTabIconStatics&&) noexcept = default;
        IWindowTabIconStatics& operator=(IWindowTabIconStatics const&) & noexcept = default;
        IWindowTabIconStatics& operator=(IWindowTabIconStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabManager :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabManager>
    {
        IWindowTabManager(std::nullptr_t = nullptr) noexcept {}
        IWindowTabManager(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabManager(IWindowTabManager const&) noexcept = default;
        IWindowTabManager(IWindowTabManager&&) noexcept = default;
        IWindowTabManager& operator=(IWindowTabManager const&) & noexcept = default;
        IWindowTabManager& operator=(IWindowTabManager&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabManagerStatics>
    {
        IWindowTabManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IWindowTabManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabManagerStatics(IWindowTabManagerStatics const&) noexcept = default;
        IWindowTabManagerStatics(IWindowTabManagerStatics&&) noexcept = default;
        IWindowTabManagerStatics& operator=(IWindowTabManagerStatics const&) & noexcept = default;
        IWindowTabManagerStatics& operator=(IWindowTabManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabSwitchRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabSwitchRequestedEventArgs>
    {
        IWindowTabSwitchRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowTabSwitchRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabSwitchRequestedEventArgs(IWindowTabSwitchRequestedEventArgs const&) noexcept = default;
        IWindowTabSwitchRequestedEventArgs(IWindowTabSwitchRequestedEventArgs&&) noexcept = default;
        IWindowTabSwitchRequestedEventArgs& operator=(IWindowTabSwitchRequestedEventArgs const&) & noexcept = default;
        IWindowTabSwitchRequestedEventArgs& operator=(IWindowTabSwitchRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabTearOutRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabTearOutRequestedEventArgs>
    {
        IWindowTabTearOutRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowTabTearOutRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabTearOutRequestedEventArgs(IWindowTabTearOutRequestedEventArgs const&) noexcept = default;
        IWindowTabTearOutRequestedEventArgs(IWindowTabTearOutRequestedEventArgs&&) noexcept = default;
        IWindowTabTearOutRequestedEventArgs& operator=(IWindowTabTearOutRequestedEventArgs const&) & noexcept = default;
        IWindowTabTearOutRequestedEventArgs& operator=(IWindowTabTearOutRequestedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IWindowTabThumbnailRequestedEventArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IWindowTabThumbnailRequestedEventArgs>
    {
        IWindowTabThumbnailRequestedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IWindowTabThumbnailRequestedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IWindowTabThumbnailRequestedEventArgs(IWindowTabThumbnailRequestedEventArgs const&) noexcept = default;
        IWindowTabThumbnailRequestedEventArgs(IWindowTabThumbnailRequestedEventArgs&&) noexcept = default;
        IWindowTabThumbnailRequestedEventArgs& operator=(IWindowTabThumbnailRequestedEventArgs const&) & noexcept = default;
        IWindowTabThumbnailRequestedEventArgs& operator=(IWindowTabThumbnailRequestedEventArgs&&) & noexcept = default;
    };
}
#endif
