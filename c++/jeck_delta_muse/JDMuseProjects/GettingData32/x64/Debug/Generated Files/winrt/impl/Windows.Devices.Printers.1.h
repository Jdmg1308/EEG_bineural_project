// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_Devices_Printers_1_H
#define WINRT_Windows_Devices_Printers_1_H
#include "winrt/impl/Windows.Devices.Printers.0.h"
WINRT_EXPORT namespace winrt::Windows::Devices::Printers
{
    struct __declspec(empty_bases) IIppAttributeError :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppAttributeError>
    {
        IIppAttributeError(std::nullptr_t = nullptr) noexcept {}
        IIppAttributeError(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppAttributeError(IIppAttributeError const&) noexcept = default;
        IIppAttributeError(IIppAttributeError&&) noexcept = default;
        IIppAttributeError& operator=(IIppAttributeError const&) & noexcept = default;
        IIppAttributeError& operator=(IIppAttributeError&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppAttributeValue :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppAttributeValue>
    {
        IIppAttributeValue(std::nullptr_t = nullptr) noexcept {}
        IIppAttributeValue(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppAttributeValue(IIppAttributeValue const&) noexcept = default;
        IIppAttributeValue(IIppAttributeValue&&) noexcept = default;
        IIppAttributeValue& operator=(IIppAttributeValue const&) & noexcept = default;
        IIppAttributeValue& operator=(IIppAttributeValue&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppAttributeValueStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppAttributeValueStatics>
    {
        IIppAttributeValueStatics(std::nullptr_t = nullptr) noexcept {}
        IIppAttributeValueStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppAttributeValueStatics(IIppAttributeValueStatics const&) noexcept = default;
        IIppAttributeValueStatics(IIppAttributeValueStatics&&) noexcept = default;
        IIppAttributeValueStatics& operator=(IIppAttributeValueStatics const&) & noexcept = default;
        IIppAttributeValueStatics& operator=(IIppAttributeValueStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppIntegerRange :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppIntegerRange>
    {
        IIppIntegerRange(std::nullptr_t = nullptr) noexcept {}
        IIppIntegerRange(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppIntegerRange(IIppIntegerRange const&) noexcept = default;
        IIppIntegerRange(IIppIntegerRange&&) noexcept = default;
        IIppIntegerRange& operator=(IIppIntegerRange const&) & noexcept = default;
        IIppIntegerRange& operator=(IIppIntegerRange&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppIntegerRangeFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppIntegerRangeFactory>
    {
        IIppIntegerRangeFactory(std::nullptr_t = nullptr) noexcept {}
        IIppIntegerRangeFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppIntegerRangeFactory(IIppIntegerRangeFactory const&) noexcept = default;
        IIppIntegerRangeFactory(IIppIntegerRangeFactory&&) noexcept = default;
        IIppIntegerRangeFactory& operator=(IIppIntegerRangeFactory const&) & noexcept = default;
        IIppIntegerRangeFactory& operator=(IIppIntegerRangeFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppPrintDevice :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppPrintDevice>
    {
        IIppPrintDevice(std::nullptr_t = nullptr) noexcept {}
        IIppPrintDevice(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppPrintDevice(IIppPrintDevice const&) noexcept = default;
        IIppPrintDevice(IIppPrintDevice&&) noexcept = default;
        IIppPrintDevice& operator=(IIppPrintDevice const&) & noexcept = default;
        IIppPrintDevice& operator=(IIppPrintDevice&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppPrintDevice2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppPrintDevice2>
    {
        IIppPrintDevice2(std::nullptr_t = nullptr) noexcept {}
        IIppPrintDevice2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppPrintDevice2(IIppPrintDevice2 const&) noexcept = default;
        IIppPrintDevice2(IIppPrintDevice2&&) noexcept = default;
        IIppPrintDevice2& operator=(IIppPrintDevice2 const&) & noexcept = default;
        IIppPrintDevice2& operator=(IIppPrintDevice2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppPrintDevice3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppPrintDevice3>
    {
        IIppPrintDevice3(std::nullptr_t = nullptr) noexcept {}
        IIppPrintDevice3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppPrintDevice3(IIppPrintDevice3 const&) noexcept = default;
        IIppPrintDevice3(IIppPrintDevice3&&) noexcept = default;
        IIppPrintDevice3& operator=(IIppPrintDevice3 const&) & noexcept = default;
        IIppPrintDevice3& operator=(IIppPrintDevice3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppPrintDevice4 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppPrintDevice4>
    {
        IIppPrintDevice4(std::nullptr_t = nullptr) noexcept {}
        IIppPrintDevice4(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppPrintDevice4(IIppPrintDevice4 const&) noexcept = default;
        IIppPrintDevice4(IIppPrintDevice4&&) noexcept = default;
        IIppPrintDevice4& operator=(IIppPrintDevice4 const&) & noexcept = default;
        IIppPrintDevice4& operator=(IIppPrintDevice4&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppPrintDeviceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppPrintDeviceStatics>
    {
        IIppPrintDeviceStatics(std::nullptr_t = nullptr) noexcept {}
        IIppPrintDeviceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppPrintDeviceStatics(IIppPrintDeviceStatics const&) noexcept = default;
        IIppPrintDeviceStatics(IIppPrintDeviceStatics&&) noexcept = default;
        IIppPrintDeviceStatics& operator=(IIppPrintDeviceStatics const&) & noexcept = default;
        IIppPrintDeviceStatics& operator=(IIppPrintDeviceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppResolution :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppResolution>
    {
        IIppResolution(std::nullptr_t = nullptr) noexcept {}
        IIppResolution(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppResolution(IIppResolution const&) noexcept = default;
        IIppResolution(IIppResolution&&) noexcept = default;
        IIppResolution& operator=(IIppResolution const&) & noexcept = default;
        IIppResolution& operator=(IIppResolution&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppResolutionFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppResolutionFactory>
    {
        IIppResolutionFactory(std::nullptr_t = nullptr) noexcept {}
        IIppResolutionFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppResolutionFactory(IIppResolutionFactory const&) noexcept = default;
        IIppResolutionFactory(IIppResolutionFactory&&) noexcept = default;
        IIppResolutionFactory& operator=(IIppResolutionFactory const&) & noexcept = default;
        IIppResolutionFactory& operator=(IIppResolutionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppSetAttributesResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppSetAttributesResult>
    {
        IIppSetAttributesResult(std::nullptr_t = nullptr) noexcept {}
        IIppSetAttributesResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppSetAttributesResult(IIppSetAttributesResult const&) noexcept = default;
        IIppSetAttributesResult(IIppSetAttributesResult&&) noexcept = default;
        IIppSetAttributesResult& operator=(IIppSetAttributesResult const&) & noexcept = default;
        IIppSetAttributesResult& operator=(IIppSetAttributesResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppTextWithLanguage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppTextWithLanguage>
    {
        IIppTextWithLanguage(std::nullptr_t = nullptr) noexcept {}
        IIppTextWithLanguage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppTextWithLanguage(IIppTextWithLanguage const&) noexcept = default;
        IIppTextWithLanguage(IIppTextWithLanguage&&) noexcept = default;
        IIppTextWithLanguage& operator=(IIppTextWithLanguage const&) & noexcept = default;
        IIppTextWithLanguage& operator=(IIppTextWithLanguage&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IIppTextWithLanguageFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IIppTextWithLanguageFactory>
    {
        IIppTextWithLanguageFactory(std::nullptr_t = nullptr) noexcept {}
        IIppTextWithLanguageFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IIppTextWithLanguageFactory(IIppTextWithLanguageFactory const&) noexcept = default;
        IIppTextWithLanguageFactory(IIppTextWithLanguageFactory&&) noexcept = default;
        IIppTextWithLanguageFactory& operator=(IIppTextWithLanguageFactory const&) & noexcept = default;
        IIppTextWithLanguageFactory& operator=(IIppTextWithLanguageFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPageConfigurationSettings :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPageConfigurationSettings>
    {
        IPageConfigurationSettings(std::nullptr_t = nullptr) noexcept {}
        IPageConfigurationSettings(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPageConfigurationSettings(IPageConfigurationSettings const&) noexcept = default;
        IPageConfigurationSettings(IPageConfigurationSettings&&) noexcept = default;
        IPageConfigurationSettings& operator=(IPageConfigurationSettings const&) & noexcept = default;
        IPageConfigurationSettings& operator=(IPageConfigurationSettings&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPdlPassthroughProvider :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPdlPassthroughProvider>
    {
        IPdlPassthroughProvider(std::nullptr_t = nullptr) noexcept {}
        IPdlPassthroughProvider(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPdlPassthroughProvider(IPdlPassthroughProvider const&) noexcept = default;
        IPdlPassthroughProvider(IPdlPassthroughProvider&&) noexcept = default;
        IPdlPassthroughProvider& operator=(IPdlPassthroughProvider const&) & noexcept = default;
        IPdlPassthroughProvider& operator=(IPdlPassthroughProvider&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPdlPassthroughTarget :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPdlPassthroughTarget>
    {
        IPdlPassthroughTarget(std::nullptr_t = nullptr) noexcept {}
        IPdlPassthroughTarget(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPdlPassthroughTarget(IPdlPassthroughTarget const&) noexcept = default;
        IPdlPassthroughTarget(IPdlPassthroughTarget&&) noexcept = default;
        IPdlPassthroughTarget& operator=(IPdlPassthroughTarget const&) & noexcept = default;
        IPdlPassthroughTarget& operator=(IPdlPassthroughTarget&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPrint3DDevice :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrint3DDevice>
    {
        IPrint3DDevice(std::nullptr_t = nullptr) noexcept {}
        IPrint3DDevice(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPrint3DDevice(IPrint3DDevice const&) noexcept = default;
        IPrint3DDevice(IPrint3DDevice&&) noexcept = default;
        IPrint3DDevice& operator=(IPrint3DDevice const&) & noexcept = default;
        IPrint3DDevice& operator=(IPrint3DDevice&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPrint3DDeviceStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrint3DDeviceStatics>
    {
        IPrint3DDeviceStatics(std::nullptr_t = nullptr) noexcept {}
        IPrint3DDeviceStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPrint3DDeviceStatics(IPrint3DDeviceStatics const&) noexcept = default;
        IPrint3DDeviceStatics(IPrint3DDeviceStatics&&) noexcept = default;
        IPrint3DDeviceStatics& operator=(IPrint3DDeviceStatics const&) & noexcept = default;
        IPrint3DDeviceStatics& operator=(IPrint3DDeviceStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPrintSchema :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPrintSchema>
    {
        IPrintSchema(std::nullptr_t = nullptr) noexcept {}
        IPrintSchema(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPrintSchema(IPrintSchema const&) noexcept = default;
        IPrintSchema(IPrintSchema&&) noexcept = default;
        IPrintSchema& operator=(IPrintSchema const&) & noexcept = default;
        IPrintSchema& operator=(IPrintSchema&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualPrinterInstallationParameters :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualPrinterInstallationParameters>
    {
        IVirtualPrinterInstallationParameters(std::nullptr_t = nullptr) noexcept {}
        IVirtualPrinterInstallationParameters(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualPrinterInstallationParameters(IVirtualPrinterInstallationParameters const&) noexcept = default;
        IVirtualPrinterInstallationParameters(IVirtualPrinterInstallationParameters&&) noexcept = default;
        IVirtualPrinterInstallationParameters& operator=(IVirtualPrinterInstallationParameters const&) & noexcept = default;
        IVirtualPrinterInstallationParameters& operator=(IVirtualPrinterInstallationParameters&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualPrinterInstallationResult :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualPrinterInstallationResult>
    {
        IVirtualPrinterInstallationResult(std::nullptr_t = nullptr) noexcept {}
        IVirtualPrinterInstallationResult(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualPrinterInstallationResult(IVirtualPrinterInstallationResult const&) noexcept = default;
        IVirtualPrinterInstallationResult(IVirtualPrinterInstallationResult&&) noexcept = default;
        IVirtualPrinterInstallationResult& operator=(IVirtualPrinterInstallationResult const&) & noexcept = default;
        IVirtualPrinterInstallationResult& operator=(IVirtualPrinterInstallationResult&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualPrinterManagerStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualPrinterManagerStatics>
    {
        IVirtualPrinterManagerStatics(std::nullptr_t = nullptr) noexcept {}
        IVirtualPrinterManagerStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualPrinterManagerStatics(IVirtualPrinterManagerStatics const&) noexcept = default;
        IVirtualPrinterManagerStatics(IVirtualPrinterManagerStatics&&) noexcept = default;
        IVirtualPrinterManagerStatics& operator=(IVirtualPrinterManagerStatics const&) & noexcept = default;
        IVirtualPrinterManagerStatics& operator=(IVirtualPrinterManagerStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualPrinterSupportedFormat :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualPrinterSupportedFormat>
    {
        IVirtualPrinterSupportedFormat(std::nullptr_t = nullptr) noexcept {}
        IVirtualPrinterSupportedFormat(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualPrinterSupportedFormat(IVirtualPrinterSupportedFormat const&) noexcept = default;
        IVirtualPrinterSupportedFormat(IVirtualPrinterSupportedFormat&&) noexcept = default;
        IVirtualPrinterSupportedFormat& operator=(IVirtualPrinterSupportedFormat const&) & noexcept = default;
        IVirtualPrinterSupportedFormat& operator=(IVirtualPrinterSupportedFormat&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IVirtualPrinterSupportedFormatFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IVirtualPrinterSupportedFormatFactory>
    {
        IVirtualPrinterSupportedFormatFactory(std::nullptr_t = nullptr) noexcept {}
        IVirtualPrinterSupportedFormatFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IVirtualPrinterSupportedFormatFactory(IVirtualPrinterSupportedFormatFactory const&) noexcept = default;
        IVirtualPrinterSupportedFormatFactory(IVirtualPrinterSupportedFormatFactory&&) noexcept = default;
        IVirtualPrinterSupportedFormatFactory& operator=(IVirtualPrinterSupportedFormatFactory const&) & noexcept = default;
        IVirtualPrinterSupportedFormatFactory& operator=(IVirtualPrinterSupportedFormatFactory&&) & noexcept = default;
    };
}
#endif
