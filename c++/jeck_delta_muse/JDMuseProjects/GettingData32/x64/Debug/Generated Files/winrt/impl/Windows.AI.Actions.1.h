// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.210505.3

#ifndef WINRT_Windows_AI_Actions_1_H
#define WINRT_Windows_AI_Actions_1_H
#include "winrt/impl/Windows.AI.Actions.0.h"
WINRT_EXPORT namespace winrt::Windows::AI::Actions
{
    struct __declspec(empty_bases) IActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionEntity>
    {
        IActionEntity(std::nullptr_t = nullptr) noexcept {}
        IActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionEntity(IActionEntity const&) noexcept = default;
        IActionEntity(IActionEntity&&) noexcept = default;
        IActionEntity& operator=(IActionEntity const&) & noexcept = default;
        IActionEntity& operator=(IActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionEntity2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionEntity2>
    {
        IActionEntity2(std::nullptr_t = nullptr) noexcept {}
        IActionEntity2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionEntity2(IActionEntity2 const&) noexcept = default;
        IActionEntity2(IActionEntity2&&) noexcept = default;
        IActionEntity2& operator=(IActionEntity2 const&) & noexcept = default;
        IActionEntity2& operator=(IActionEntity2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionEntityDisplayInfo :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionEntityDisplayInfo>
    {
        IActionEntityDisplayInfo(std::nullptr_t = nullptr) noexcept {}
        IActionEntityDisplayInfo(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionEntityDisplayInfo(IActionEntityDisplayInfo const&) noexcept = default;
        IActionEntityDisplayInfo(IActionEntityDisplayInfo&&) noexcept = default;
        IActionEntityDisplayInfo& operator=(IActionEntityDisplayInfo const&) & noexcept = default;
        IActionEntityDisplayInfo& operator=(IActionEntityDisplayInfo&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionEntityFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionEntityFactory>
    {
        IActionEntityFactory(std::nullptr_t = nullptr) noexcept {}
        IActionEntityFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionEntityFactory(IActionEntityFactory const&) noexcept = default;
        IActionEntityFactory(IActionEntityFactory&&) noexcept = default;
        IActionEntityFactory& operator=(IActionEntityFactory const&) & noexcept = default;
        IActionEntityFactory& operator=(IActionEntityFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionEntityFactory2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionEntityFactory2>
    {
        IActionEntityFactory2(std::nullptr_t = nullptr) noexcept {}
        IActionEntityFactory2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionEntityFactory2(IActionEntityFactory2 const&) noexcept = default;
        IActionEntityFactory2(IActionEntityFactory2&&) noexcept = default;
        IActionEntityFactory2& operator=(IActionEntityFactory2 const&) & noexcept = default;
        IActionEntityFactory2& operator=(IActionEntityFactory2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionEntityFactory3 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionEntityFactory3>
    {
        IActionEntityFactory3(std::nullptr_t = nullptr) noexcept {}
        IActionEntityFactory3(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionEntityFactory3(IActionEntityFactory3 const&) noexcept = default;
        IActionEntityFactory3(IActionEntityFactory3&&) noexcept = default;
        IActionEntityFactory3& operator=(IActionEntityFactory3 const&) & noexcept = default;
        IActionEntityFactory3& operator=(IActionEntityFactory3&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionEntityFactoryFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionEntityFactoryFactory>
    {
        IActionEntityFactoryFactory(std::nullptr_t = nullptr) noexcept {}
        IActionEntityFactoryFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionEntityFactoryFactory(IActionEntityFactoryFactory const&) noexcept = default;
        IActionEntityFactoryFactory(IActionEntityFactoryFactory&&) noexcept = default;
        IActionEntityFactoryFactory& operator=(IActionEntityFactoryFactory const&) & noexcept = default;
        IActionEntityFactoryFactory& operator=(IActionEntityFactoryFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionFeedback :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionFeedback>
    {
        IActionFeedback(std::nullptr_t = nullptr) noexcept {}
        IActionFeedback(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionFeedback(IActionFeedback const&) noexcept = default;
        IActionFeedback(IActionFeedback&&) noexcept = default;
        IActionFeedback& operator=(IActionFeedback const&) & noexcept = default;
        IActionFeedback& operator=(IActionFeedback&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionInvocationContext :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionInvocationContext>
    {
        IActionInvocationContext(std::nullptr_t = nullptr) noexcept {}
        IActionInvocationContext(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionInvocationContext(IActionInvocationContext const&) noexcept = default;
        IActionInvocationContext(IActionInvocationContext&&) noexcept = default;
        IActionInvocationContext& operator=(IActionInvocationContext const&) & noexcept = default;
        IActionInvocationContext& operator=(IActionInvocationContext&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionInvocationContext2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionInvocationContext2>
    {
        IActionInvocationContext2(std::nullptr_t = nullptr) noexcept {}
        IActionInvocationContext2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionInvocationContext2(IActionInvocationContext2 const&) noexcept = default;
        IActionInvocationContext2(IActionInvocationContext2&&) noexcept = default;
        IActionInvocationContext2& operator=(IActionInvocationContext2 const&) & noexcept = default;
        IActionInvocationContext2& operator=(IActionInvocationContext2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionInvocationHelpDetails :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionInvocationHelpDetails>
    {
        IActionInvocationHelpDetails(std::nullptr_t = nullptr) noexcept {}
        IActionInvocationHelpDetails(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionInvocationHelpDetails(IActionInvocationHelpDetails const&) noexcept = default;
        IActionInvocationHelpDetails(IActionInvocationHelpDetails&&) noexcept = default;
        IActionInvocationHelpDetails& operator=(IActionInvocationHelpDetails const&) & noexcept = default;
        IActionInvocationHelpDetails& operator=(IActionInvocationHelpDetails&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionRuntime :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionRuntime>
    {
        IActionRuntime(std::nullptr_t = nullptr) noexcept {}
        IActionRuntime(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionRuntime(IActionRuntime const&) noexcept = default;
        IActionRuntime(IActionRuntime&&) noexcept = default;
        IActionRuntime& operator=(IActionRuntime const&) & noexcept = default;
        IActionRuntime& operator=(IActionRuntime&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionRuntime2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionRuntime2>
    {
        IActionRuntime2(std::nullptr_t = nullptr) noexcept {}
        IActionRuntime2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionRuntime2(IActionRuntime2 const&) noexcept = default;
        IActionRuntime2(IActionRuntime2&&) noexcept = default;
        IActionRuntime2& operator=(IActionRuntime2 const&) & noexcept = default;
        IActionRuntime2& operator=(IActionRuntime2&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IActionRuntimeFactory :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IActionRuntimeFactory>
    {
        IActionRuntimeFactory(std::nullptr_t = nullptr) noexcept {}
        IActionRuntimeFactory(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IActionRuntimeFactory(IActionRuntimeFactory const&) noexcept = default;
        IActionRuntimeFactory(IActionRuntimeFactory&&) noexcept = default;
        IActionRuntimeFactory& operator=(IActionRuntimeFactory const&) & noexcept = default;
        IActionRuntimeFactory& operator=(IActionRuntimeFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IContactActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IContactActionEntity>
    {
        IContactActionEntity(std::nullptr_t = nullptr) noexcept {}
        IContactActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IContactActionEntity(IContactActionEntity const&) noexcept = default;
        IContactActionEntity(IContactActionEntity&&) noexcept = default;
        IContactActionEntity& operator=(IContactActionEntity const&) & noexcept = default;
        IContactActionEntity& operator=(IContactActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IDocumentActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IDocumentActionEntity>
    {
        IDocumentActionEntity(std::nullptr_t = nullptr) noexcept {}
        IDocumentActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IDocumentActionEntity(IDocumentActionEntity const&) noexcept = default;
        IDocumentActionEntity(IDocumentActionEntity&&) noexcept = default;
        IDocumentActionEntity& operator=(IDocumentActionEntity const&) & noexcept = default;
        IDocumentActionEntity& operator=(IDocumentActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IFileActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IFileActionEntity>
    {
        IFileActionEntity(std::nullptr_t = nullptr) noexcept {}
        IFileActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IFileActionEntity(IFileActionEntity const&) noexcept = default;
        IFileActionEntity(IFileActionEntity&&) noexcept = default;
        IFileActionEntity& operator=(IFileActionEntity const&) & noexcept = default;
        IFileActionEntity& operator=(IFileActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) INamedActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<INamedActionEntity>
    {
        INamedActionEntity(std::nullptr_t = nullptr) noexcept {}
        INamedActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        INamedActionEntity(INamedActionEntity const&) noexcept = default;
        INamedActionEntity(INamedActionEntity&&) noexcept = default;
        INamedActionEntity& operator=(INamedActionEntity const&) & noexcept = default;
        INamedActionEntity& operator=(INamedActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IPhotoActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IPhotoActionEntity>
    {
        IPhotoActionEntity(std::nullptr_t = nullptr) noexcept {}
        IPhotoActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IPhotoActionEntity(IPhotoActionEntity const&) noexcept = default;
        IPhotoActionEntity(IPhotoActionEntity&&) noexcept = default;
        IPhotoActionEntity& operator=(IPhotoActionEntity const&) & noexcept = default;
        IPhotoActionEntity& operator=(IPhotoActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IRemoteFileActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IRemoteFileActionEntity>
    {
        IRemoteFileActionEntity(std::nullptr_t = nullptr) noexcept {}
        IRemoteFileActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IRemoteFileActionEntity(IRemoteFileActionEntity const&) noexcept = default;
        IRemoteFileActionEntity(IRemoteFileActionEntity&&) noexcept = default;
        IRemoteFileActionEntity& operator=(IRemoteFileActionEntity const&) & noexcept = default;
        IRemoteFileActionEntity& operator=(IRemoteFileActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStreamingTextActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStreamingTextActionEntity>
    {
        IStreamingTextActionEntity(std::nullptr_t = nullptr) noexcept {}
        IStreamingTextActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStreamingTextActionEntity(IStreamingTextActionEntity const&) noexcept = default;
        IStreamingTextActionEntity(IStreamingTextActionEntity&&) noexcept = default;
        IStreamingTextActionEntity& operator=(IStreamingTextActionEntity const&) & noexcept = default;
        IStreamingTextActionEntity& operator=(IStreamingTextActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStreamingTextActionEntityTextChangedArgs :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStreamingTextActionEntityTextChangedArgs>
    {
        IStreamingTextActionEntityTextChangedArgs(std::nullptr_t = nullptr) noexcept {}
        IStreamingTextActionEntityTextChangedArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStreamingTextActionEntityTextChangedArgs(IStreamingTextActionEntityTextChangedArgs const&) noexcept = default;
        IStreamingTextActionEntityTextChangedArgs(IStreamingTextActionEntityTextChangedArgs&&) noexcept = default;
        IStreamingTextActionEntityTextChangedArgs& operator=(IStreamingTextActionEntityTextChangedArgs const&) & noexcept = default;
        IStreamingTextActionEntityTextChangedArgs& operator=(IStreamingTextActionEntityTextChangedArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IStreamingTextActionEntityWriter :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStreamingTextActionEntityWriter>
    {
        IStreamingTextActionEntityWriter(std::nullptr_t = nullptr) noexcept {}
        IStreamingTextActionEntityWriter(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IStreamingTextActionEntityWriter(IStreamingTextActionEntityWriter const&) noexcept = default;
        IStreamingTextActionEntityWriter(IStreamingTextActionEntityWriter&&) noexcept = default;
        IStreamingTextActionEntityWriter& operator=(IStreamingTextActionEntityWriter const&) & noexcept = default;
        IStreamingTextActionEntityWriter& operator=(IStreamingTextActionEntityWriter&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITableActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITableActionEntity>
    {
        ITableActionEntity(std::nullptr_t = nullptr) noexcept {}
        ITableActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITableActionEntity(ITableActionEntity const&) noexcept = default;
        ITableActionEntity(ITableActionEntity&&) noexcept = default;
        ITableActionEntity& operator=(ITableActionEntity const&) & noexcept = default;
        ITableActionEntity& operator=(ITableActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextActionEntity :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextActionEntity>
    {
        ITextActionEntity(std::nullptr_t = nullptr) noexcept {}
        ITextActionEntity(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextActionEntity(ITextActionEntity const&) noexcept = default;
        ITextActionEntity(ITextActionEntity&&) noexcept = default;
        ITextActionEntity& operator=(ITextActionEntity const&) & noexcept = default;
        ITextActionEntity& operator=(ITextActionEntity&&) & noexcept = default;
    };
    struct __declspec(empty_bases) ITextActionEntity2 :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<ITextActionEntity2>
    {
        ITextActionEntity2(std::nullptr_t = nullptr) noexcept {}
        ITextActionEntity2(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        ITextActionEntity2(ITextActionEntity2 const&) noexcept = default;
        ITextActionEntity2(ITextActionEntity2&&) noexcept = default;
        ITextActionEntity2& operator=(ITextActionEntity2 const&) & noexcept = default;
        ITextActionEntity2& operator=(ITextActionEntity2&&) & noexcept = default;
    };
}
#endif
